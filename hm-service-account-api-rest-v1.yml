swagger: '2.0'
host: sandbox.api.high-mobility.com
securityDefinitions:
    ServiceAccountToken :
      type: apiKey
      name: Authorization
      description: This is a Bearer token. Service Account Token is a temporary token for server to service communication, find out more how to generate one at https://high-mobility.com/learn/documentation/cloud-api/service-account-api/intro/
      in: header
paths:
  /v1/telematics_status:
    post:
      security:
        - ServiceAccountToken: []
      tags:
        - Telematics Status
      summary: ''
      responses:
        '200':
          schema:
            $ref: '#/definitions/TelematicsStatusResponse'
          description: Vehicle status requested successfully
        '401':
          schema:
            $ref: '#/definitions/UnauthorizedErrors'
          description: When an invalid ServiceAccountToken is used.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TelematicsStatusRequest'
      operationId: ApiWeb.TelematicsStatusController.create
      description: Retrieves the telematics status for a specific VIN. This can be used to find out if the vehicle has the necessary connectivity to transmit data.
  '/v1/device_certificates/{id}':
    get:
      security:
        - ServiceAccountToken: []
      tags:
        - DeviceCertificate
      summary: ''
      responses:
        '200':
          schema:
            $ref: '#/definitions/DeviceCertificate'
          description: Success
        '401':
          schema:
            $ref: '#/definitions/UnauthorizedErrors'
          description: When an invalid ServiceAccountToken is used.
        '404':
          schema:
            $ref: '#/definitions/Errors'
          description: Not found
        '500':
          description: Server Errors
      parameters:
        - type: string
          required: true
          name: Authorization
          in: header
          description: A Service Account Token
        - type: string
          required: true
          name: id
          in: path
          description: The id of the device certificate
      operationId: ApiWeb.DeviceCertificateController.show
      description: Retrieves a device certificate.
    delete:
      security:
        - ServiceAccountToken: []
      tags:
        - DeviceCertificate
      summary: ''
      responses:
        '204':
          description: Success
        '401':
          schema:
            $ref: '#/definitions/UnauthorizedErrors'
          description: When an invalid ServiceAccountToken is used.
        '404':
          schema:
            $ref: '#/definitions/Errors'
          description: Not found
        '500':
          description: Server Errors
      parameters:
        - type: string
          required: true
          name: Authorization
          in: header
          description: A Service Account Token
        - type: string
          required: true
          name: id
          in: path
          description: The id of the device certificate
      operationId: ApiWeb.DeviceCertificateController.delete
      description: Revokes a device certificate.
  /v1/device_certificates:
    post:
      security:
        - ServiceAccountToken: []
      tags:
        - DeviceCertificate
      summary: ''
      responses:
        '201':
          schema:
            $ref: '#/definitions/DeviceCertificate'
          description: Success
        '401':
          schema:
            $ref: '#/definitions/UnauthorizedErrors'
          description: When an invalid ServiceAccountToken is used.
        '422':
          schema:
            $ref: '#/definitions/Errors'
          description: Errors
        '500':
          description: Server Errors
      parameters:
        - type: string
          required: true
          name: Authorization
          in: header
          description: A Service Account Token
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeviceCertificateRequest'
      operationId: ApiWeb.DeviceCertificateController.create
      description: Creates a device certificate.
    get:
      security:
        - ServiceAccountToken: []
      tags:
        - DeviceCertificate
      summary: ''
      responses:
        '200':
          schema:
            $ref: '#/definitions/DeviceCertificates'
          description: Success
        '401':
          schema:
            $ref: '#/definitions/UnauthorizedErrors'
          description: When an invalid ServiceAccountToken is used.
        '500':
          description: Server Errors
      parameters:
        - type: string
          required: true
          name: Authorization
          in: header
          description: A Service Account Token
      operationId: ApiWeb.DeviceCertificateController.index
      description: Lists all device certificates.
  '/v1/auth_tokens/{auth_token}':
    delete:
      tags:
        - ServiceAccountToken
      summary: ''
      parameters:
        - type: string
          required: true
          name: auth_token
          in: path
          description: The Auth token to revoke
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceAccountTokenRequest'
      responses:
        '201':
          schema:
            $ref: '#/definitions/ServiceAccountTokenResponse'
          description: Success
        '404':
          schema:
            $ref: '#/definitions/Errors'
          description: Success
        '401':
          schema:
            $ref: '#/definitions/UnauthorizedErrors'
          description: When an invalid ServiceAccountToken is used.
        '422':
          schema:
            $ref: '#/definitions/Errors'
          description: Errors
        '500':
          description: Server Errors
      operationId: ApiWeb.ServiceAccountTokenController.delete
      description: Revokes a Service Account API authorization token.
  /v1/auth_tokens:
    post:
      tags:
        - ServiceAccountToken
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceAccountTokenRequest'
      summary: ''
      responses:
        '201':
          schema:
            $ref: '#/definitions/ServiceAccountTokenResponse'
          description: Success
        '401':
          schema:
            $ref: '#/definitions/AuthTokenUnauthorizedErrors'
          description: When the JWT is invalid or not signed correctly
        '422':
          schema:
            $ref: '#/definitions/Errors'
          description: Errors
        '500':
          description: Server Errors
      operationId: ApiWeb.ServiceAccountTokenController.create
      description: Creates an authorization token to be used with any of the Service Account API endpoints.
  /v1/fleets/vehicles:
    post:
      security:
        - ServiceAccountToken: []
      tags:
        - Fleet
      responses:
        '200':
          schema:
            $ref: '#/definitions/FleetVehiclePostResponse'
          description: Success
        '422':
          schema:
            $ref: '#/definitions/FleetErrors'
          description: Invalid Input. It occurs when the payload is missing a params or the the application is not configured.
        '401':
          schema:
            $ref: '#/definitions/UnauthorizedErrors'
          description: When an invalid ServiceAccountToken is used.
        '403':
          schema:
            $ref: '#/definitions/FleetFrobidenErrors'
          description: When the application doesn't have fleet access.
        '500':
          description: Server Errors
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/FleetVehicleRequest'
        - type: string
          required: true
          name: Authorization
          in: header
          description: A Service Account Token associated to a fleet application
      operationId: ApiWeb.FleetImportController.create
      description: Register a fleet vehicle for data access clearance. Once the VIN has its status changed to "approved", an access token can be retrieved for the VIN.
    get:
      security:
        - ServiceAccountToken: []
      tags:
        - Fleet
      responses:
        '200':
          schema:
            $ref: '#/definitions/FleetVehicleGetResponse'
          description: Success
        '401':
          schema:
            $ref: '#/definitions/UnauthorizedErrors'
          description: When an invalid ServiceAccountToken is used.
        '403':
          schema:
            $ref: '#/definitions/FleetErrors'
          examples:
            auth_error:
              errors:
                value:
                  - detail: This service account is not associated with a fleet.
                    source: Authorization
                    title: Not authorized
          description: When the application doesn't have fleet access.
        '500':
          description: Server Errors
      parameters:
        - type: string
          required: true
          name: Authorization
          in: header
          description: A Service Account Token associated to a fleet application
      operationId: ApiWeb.FleetImportController.index
      description: Get the status of VINs that have previously been registered for data access clearance.
  /v1/fleets/vehicles/{vin}:
    get:
      security:
        - ServiceAccountToken: []
      tags:
        - Fleet
      responses:
        '200':
          schema:
            $ref: '#/definitions/FleetVehicleGetItemResponse'
          description: Success
        '401':
          schema:
            $ref: '#/definitions/UnauthorizedErrors'
          description: When an invalid ServiceAccountToken is used.
        '403':
          schema:
            $ref: '#/definitions/FleetErrors'
          examples:
            auth_error:
              errors:
                value:
                  - detail: This service account is not associated with a fleet.
                    source: Authorization
                    title: Not authorized
          description: When the application doesn't have fleet access.
        '404':
          schema:
            $ref: '#/definitions/FleetErrors'
          description: Given resource not found
        '500':
          description: Server Errors
      parameters:
        - type: string
          required: true
          name: Authorization
          in: header
          description: A Service Account Token associated to a fleet application
      operationId: ApiWeb.FleetVehicleController.show
      description: Get the latest fleet vehicle.
  /v1/fleets/{vin}/cancel_activation:
    post:
      security:
        - ServiceAccountToken: []
      tags:
        - Fleet
      responses:
        '200':
          schema:
            $ref: '#/definitions/FleetVin'
          description: Vehicle activation is being canceled.
        '422':
          schema:
            $ref: '#/definitions/FleetErrors'
          description: Invalid input. This occurs when the payload is missing a parameter or the application has not been configured.
        '401':
          schema:
            $ref: '#/definitions/UnauthorizedErrors'
          description: When an invalid ServiceAccountToken is used.
        '403':
          schema:
            $ref: '#/definitions/FleetFrobidenErrors'
          description: When the application doesn't have fleet access.
        '404':
          schema:
            $ref: '#/definitions/FleetErrors'
          description: Given resource not found
        '500':
          description: Server Errors
      parameters:
        - type: string
          required: true
          name: vin
          in: path
          description: Vehicle identification number
      operationId: ApiWeb.FleetCancelActivationController.create
      description: Cancel the ongoing activation process of a vehicle that has the "pending" status. Note that this endpoint does not revoke vehicles that are in the "approved" state, for which the OAuth2 API has to be used.
  /v1/fleets/access_tokens:
    post:
      security:
        - ServiceAccountToken: []
      tags:
        - Fleet
      responses:
        '200':
          schema:
            $ref: '#/definitions/AccessTokensReponse'
          description: Success
        '400':
          schema:
            $ref: '#/definitions/AccessTokensError'
          description: Error
        '401':
          schema:
            $ref: '#/definitions/UnauthorizedErrors'
          description: When an invalid ServiceAccountToken is used.
        '403':
          schema:
            $ref: '#/definitions/FleetErrors'
          examples:
            auth_error:
              errors:
                value:
                  - detail: This service account is not associated with a fleet.
                    source: Authorization
                    title: Not authorized
          description: When the application doesn't have fleet access.
        '500':
          description: Server Errors
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/FleetAccessTokensRequest'
        - type: string
          required: true
          name: Authorization
          in: header
          description: A Service Account Token associated to a fleet application
      operationId: ApiWeb.FleetAccessTokenController.create
      description: Creates an access token for a VIN that has the "approved" state. This access token can be used to retrieve car data through any of the SDKs or the REST API.
info:
  version: '1.0'
  title: High Mobility Service Account API
definitions:
  TelematicsStatusResponse:
    type: object
    title: TelematicsStatusResponse
    properties:
      bmw:
        type: object
        properties:
          telematics_capability:
            type: string
            enum:
              - enabled
              - disabled
              - unknown
          subscription_status:
            type: string
            enum:
              - enabled
              - disabled
              - unknown
    example:
      bmw:
        telematics_capability: enabled
        subscription_status: enabled
    description: Response of Telematics status
  TelematicsStatusRequest:
    type: object
    properties:
      vin:
        type: string
        description: Vehicle vin.
    required:
      - vin
  ServiceAccountTokenRequest:
    type: object
    properties:
      assertion:
        type: string
        description: A JWT Signed with the service account key, read more at https://high-mobility.com/learn/documentation/cloud-api/service-account-api/intro/
    example:
      assertion: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJ2ZXIiOjEsImp0aSI6IjA3M2UxOTM1LTkwZDAtNDE0Mi05MTgzLWE4ZTAxNzNhZDJlNyIsImlzcyI6IjAxMDA4MmNjLTYzZTAtNGRmMy05ZmRhLTAzZThkOWQzN2I1OCIsImlhdCI6IjIwMTYtMTAtMDZUMTc6MDQ6MzQuNDQzNDc5KzAwOjAwIiwiYXVkIjoiaHR0cHM6Ly9hcGkuaGlnaC1tb2JpbGl0eS5jb20vYXBpL3YxIn0.MEQCIG8VHMVGJL_rAaxWEvWMoSMmxNBn9Fl46zcEP9l4fFGNAiBDr9bCzx0MLi0pDBMTg1w9ZAl6VJuxeVIC7c6o8YfxQw'
  ServiceAccountTokenResponse:
    type: object
    title: ServiceAccountToken
    required:
      - valid_until
      - valid_from
      - auth_token
    properties:
      valid_until:
        type: string
        description: 'When the token expires, formatted in ISO8601'
      valid_from:
        type: string
        description: 'From when the token is valid, formatted in ISO8601'
      auth_token:
        type: string
        description: The authorization token
    example:
      valid_until: '2018-10-25T09:26:26.153089+00:00'
      valid_from: '2018-10-25T08:26:26.174792+00:00'
      auth_token: 7c106df8-d947-4cb0-b8a1-fc86038f3efb
    description: Access token enabling the creation and manipulation of Device Certificates
  Errors:
    type: array
    title: Errors
    items:
      $ref: '#/definitions/Error'
    description: List of errors
  Error:
    type: object
    title: Error
    required:
      - title
    properties:
      title:
        type: string
        description: Error title
      source:
        type: string
        description: Field that has problem
      detail:
        type: string
        description: Error detail
    description: Error details
  DeviceCertificateRequest:
    type: object
    properties:
      public_key:
        type: string
        format: base64
        description: The public key of the device that was generated with HMKit. The size should be 128 characters
      app_id:
        type: string
        description: the serial number of the application associated with the certificate
      device_name:
        type: string
        description: the display name of the device
      sdk_info:
        type: string
        description: The type and version of the SDK
    required:
      - public_key
      - app_id
  DeviceCertificates:
    type: array
    title: Device Certificates
    items:
      $ref: '#/definitions/DeviceCertificate'
    description: List of Device Certificates
  DeviceCertificate:
    type: object
    title: Device Certificate
    required:
      - device_serial_number
      - issuer_public_key
      - issuer_name
      - app_id
      - signature
      - public_key
      - id
    properties:
      signature:
        type: string
        description: the cryptographic signature of the device certificate (base64)
      public_key:
        type: string
        description: the public key of the device certificate (base64)
      issuer_public_key:
        type: string
        description: the public key of the Certificate Authority that has issued the certificate
      issuer_name:
        type: string
        description: 'the name of the Certificate Authority that has issued the certificate, which is always exve for published apps'
      id:
        type: integer
        description: the unique identifier of the device certificate
      device_serial_number:
        type: string
        description: the serial number of the device
      device_name:
        type: string
        description: the display name of the device
      app_id:
        type: string
        description: the serial number of the application associated with the certificate
    example:
      signature: Ol8VNEQbNvb2zdaMquq+ovOvVKF9gGt8goKUuuFB0gcN4awZLTnKDXV4NsnRFV8ASxp/gJJa5NfJeFJuqbcwkA==
      public_key: 1zxuh/pcdaz59nblzsz5e2y3vc0dufnzidcqubdpihzsjjcfcbne/dkorz6kxkecchqzfhbr1ha+yk+7/tzzzw==
      issuer_public_key: wxj6v+kfyfncrnd4rzeody/gtytyoqgyizyksoh67buk7gohv67afe8kzpmfl/b1wjxnxqb9x4eeekwv/nfomg==
      issuer_name: xvhm
      id: c11f0e15-c078-4f5c-a077-c15675fec5aa
      device_serial_number: f96705fcdca5d006ce
      device_name: my device
      app_id: a96027ee1779b53b1a9d6dfe
    description: The Device Certificate proves that the the app has been created by a certified developer.
  AccessTokensReponse:
    type: object
    title: AccessTokensReponse
    required:
      - expires_in
      - access_token
      - token_type
    properties:
      validity_start_date:
        type: string
        description: 'Date and Time in ISO8601 format example: ''2018-11-06T10:20:37.094533Z'''
      validity_end_date:
        type: string
        description: 'Date and Time in ISO8601 format example: ''2018-11-06T10:20:37.094533Z'''
      token_type:
        type: string
        description: Token type
      scope:
        type: string
        description: List of scopes
      refresh_token:
        type: string
        description: Refresh token
      expires_in:
        type: integer
        description: Expiration time in seconds
      access_token:
        type: string
        description: Access token
    example:
      token_type: bearer
      scope: diagnostics.get.mileage door_locks.get.locks windows.get.windows_positions
      refresh_token: 7f7a9be0-04c9-4202-a59f-35d55079b6ba
      expires_in: 600
      access_token: a50e89e5-093c-4727-8101-4c6e81addabe
    description: Access Tokens
  FleetAccessTokensRequest:
    type: object
    properties:
      vin:
        type: string
        description: The VIN of the vehicle to ask access to.
    example:
      vin: WBADT43452G296403
    required:
      - vin
  AccessTokensError:
    type: object
    title: AccessTokensError
    required:
      - error
    properties:
      error_description:
        type: string
        description: Error description
      error:
        type: string
        description: Error code
    description: Error details
  FleetVehicleRequest:
    type: object
    properties:
      vehicles:
        type: array
        items:
          $ref: '#/definitions/FleetVehicle'
        description: Vehicle list
    example:
      vehicles:
        - vin: WBADT43452G296403
          brand: mercedes-benz
          control_measures:
            odometer:
              value: 55271000
              unit: kilometers
        - vin: WBADT43452G296404
          brand: bmw
    required:
      - vehicles
  FleetVehiclePostResponse:
    type: object
    title: FleetVehiclePostResponse
    required:
      - vehicles
    properties:
      vehicles:
        type: array
        items:
          $ref: '#/definitions/FleetVin'
        description: Vehicle list
    example:
      vehicles:
        - vin: 'WBADT43452G296403'
          status: 'pending'
        - vin: 'WBADT43452G296404'
          status: 'pending'
  FleetVehicleGetResponse:
    type: array
    title: FleetVehicleGetResponse
    items:
      $ref: '#/definitions/FleetVin'
    example:
      - vin: 'WBADT43452G296403'
        status: 'pending'
      - vin: 'WBADT43452G296404'
        status: 'pending'
  FleetVehicle:
    type: object
    title: FleetVehicle
    required:
      - vin
      - brand
    properties:
      vin:
        type: string
        description: Vehicle Identification Number (VIN)
      brand:
        type: string
        enum:
          - bmw
          - citroen
          - ds
          - mercedes-benz
          - mini
          - opel
          - peugeot
          - vauxhall
        description: Vehicle Brand
      control_measures:
        type: object
        properties:
          odometer:
            required:
              - value
              - unit
            type: object
            properties:
              value:
                type: integer
              unit:
                type: string
                enum:
                  - kilometers
                  - miles
  FleetVehicleGetItemResponse:
    type: object
    title: FleetVehicle
    required:
      - vin
      - status
    properties:
      vin:
        type: string
        description: Vehicle Identification Number (VIN)
      status:
        type: string
        enum:
          - approved
          - pending
          - revoked
          - rejected
          - canceling
          - canceled
  FleetVin:
    type: object
    title: FleetVin
    required:
      - vin
      - status
    properties:
      vin:
        type: string
        description: Vehicle Identification Number (VIN)
      status:
        type: string
        enum:
          - approved
          - pending
          - error
          - revoked
          - rejected
        description: An access token can be retrieved for the FleetVin if the status is "approved"
      description:
        type: string
        description: Optional description of the VIN
    example:
      vin: 'WBADT43452G296403'
      status: 'pending'
  FleetErrors:
    type: object
    title: Errors
    properties:
      errors:
        description: List of errors
        type: array
        items:
          $ref: '#/definitions/Error'
  FleetFrobidenErrors:
    type: object
    title: Errors
    properties:
      errors:
        description: List of errors
        type: array
        items:
          $ref: '#/definitions/Error'
        example:
          - detail: This service account is not associated with a fleet.
            source: Authorization
            title: Forbidden
  UnauthorizedErrors:
    type: object
    title: Errors
    properties:
      errors:
        description: List of errors
        type: array
        items:
          $ref: '#/definitions/Error'
        example:
          - detail: |
              Missing or invalid authorization header. The token must be obtained through the service account API and sent as a header with the format "Authorization: Bearer <token>"
            source: Authorization

  AuthTokenUnauthorizedErrors:
    type: object
    title: Errors
    properties:
      errors:
        description: List of errors
        type: array
        items:
          $ref: '#/definitions/Error'
        example:
          - detail: Missing or invalid assertion. It must be a JWT signed with the service account key
            source: Authorization
            title: Not authorized
