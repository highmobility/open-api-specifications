openapi: 3.0.3
info:
  title: Service Account Token API
  description: |-
    The Service Account Token API is where you can get auth tokens to be used for any of the following endpoints:

      * [Fleet Clearance API](/api-references/code-references/fleet/clearance/reference/v1/)
      * [Fleet Geofencing API](/api-references/code-references/fleet/geofencing/reference/v1/)
      * [Device Management API](/api-references/code-references/device-management/reference/v1/)
      * [Vehicle Eligibility API](/api-references/code-references/telematics-status/reference/v1/)
      
      Sandbox server: `https://sandbox.api.high-mobility.com`
      
      Production server: `https://api.high-mobility.com`

  contact:
    email: support@high-mobility.com
  version: 1.0.0
externalDocs:
  description: High Mobility's Developer Console
  url: https://www.high-mobility.com
servers:
  - url: https://sandbox.api.high-mobility.com
  - url: https://api.high-mobility.com

paths:
  /v1/auth_tokens:
    post:
      tags:
        - ServiceAccountToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountTokenRequest'
      summary: ''
      responses:
        '201':
          content:
            application/json:
              schema:        
                $ref: '#/components/schemas/ServiceAccountTokenResponse'
          description: Success
        '401':
          content:
            application/json:
              schema:   
                $ref: '#/components/schemas/AuthTokenUnauthorizedErrors'
          description: When the JWT is invalid or not signed correctly
        '422':
          content:
            application/json:        
              schema:
               $ref: '#/components/schemas/Errors'
          description: Errors
        '500':
          description: Server Errors
      operationId: ApiWeb.ServiceAccountTokenController.create
      description: >-
        Creates an authorization token to be used with any of the Service
        Account API endpoints.
  
  
  /v1/auth_tokens/{auth_token}:
    delete:
      tags:
        - ServiceAccountToken    
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountTokenRequest'      
      parameters:
        - schema:
            type: string
          required: true
          name: auth_token
          in: path
          description: The Auth token to revoke
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountTokenResponse'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrors'            
          description: When an invalid ServiceAccountToken is used.
        '404':
          content:
            application/json:        
              schema:
                $ref: '#/components/schemas/Errors'
          description: Success
        '422':
          content:
            application/json:        
              schema:
               $ref: '#/components/schemas/Errors'
          description: Errors
        '500':
          description: Server Errors
      operationId: ApiWeb.ServiceAccountTokenController.delete
      description: Revokes a Service Account API authorization token.

          
      
      
 
components:
  schemas:
    ServiceAccountTokenRequest:
      type: object
      properties:
        assertion:
          type: string
          description: >-
            A JWT Signed with the service account key, read more at
            https://high-mobility.com/learn/documentation/cloud-api/service-account-api/intro/
      example:
        assertion: >-
          eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJ2ZXIiOjEsImp0aSI6IjA3M2UxOTM1LTkwZDAtNDE0Mi05MTgzLWE4ZTAxNzNhZDJlNyIsImlzcyI6IjAxMDA4MmNjLTYzZTAtNGRmMy05ZmRhLTAzZThkOWQzN2I1OCIsImlhdCI6IjIwMTYtMTAtMDZUMTc6MDQ6MzQuNDQzNDc5KzAwOjAwIiwiYXVkIjoiaHR0cHM6Ly9hcGkuaGlnaC1tb2JpbGl0eS5jb20vYXBpL3YxIn0.MEQCIG8VHMVGJL_rAaxWEvWMoSMmxNBn9Fl46zcEP9l4fFGNAiBDr9bCzx0MLi0pDBMTg1w9ZAl6VJuxeVIC7c6o8YfxQw
          
    UnauthorizedErrors:
      type: object
      title: Errors
      properties:
        errors:
          description: List of errors
          type: array
          items:
            $ref: '#/components/schemas/Errors'
          example:
            - detail: >
                Missing or invalid authorization header. The token must be
                obtained through the service account API and sent as a header with
                the format "Authorization: Bearer <token>"
              source: Authorization  
    ServiceAccountTokenResponse:
      type: object
      title: ServiceAccountToken
      required:
        - valid_until
        - valid_from
        - auth_token
      properties:
        valid_until:
          type: string
          description: When the token expires, formatted in ISO8601
        valid_from:
          type: string
          description: From when the token is valid, formatted in ISO8601
        auth_token:
          type: string
          description: The authorization token
      example:
        valid_until: '2018-10-25T09:26:26.153089+00:00'
        valid_from: '2018-10-25T08:26:26.174792+00:00'
        auth_token: 7c106df8-d947-4cb0-b8a1-fc86038f3efb
      description: Access token enabling the creation and manipulation of Device Certificates

    Errors:
      type: array
      title: Errors
      items:
        $ref: '#/components/schemas/Error'
      description: List of errors
    Error:
      type: object
      title: Error
      required:
        - title
      properties:
        title:
          type: string
          description: Error title
        source:
          type: string
          description: Field that has problem
        detail:
          type: string
          description: Error detail
      description: Error details
      
    AuthTokenUnauthorizedErrors:
      type: object
      title: Errors
      properties:
        errors:
          description: List of errors
          type: array
          items:
            $ref: '#/components/schemas/Error'
          example:
            - detail: >-
                Missing or invalid assertion. It must be a JWT signed with the
                service account key
              source: Authorization
              title: Not authorized
              
